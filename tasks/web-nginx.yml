---
# setup nginx

# Flush handlers to ensure configuration is reloaded
- name: omero web | flush systemd handlers
  meta: flush_handlers

# For Python 2 Keep the old (incorrect) behaviour of only regenerating when
# OMERO.web is upgraded

- block:

    - name: omero web | check web timestamp
      stat:
        follow: false
        path: "{{ omero_web_basedir }}/{{ omero_web_symlink }}"
      register: omero_web_st

    - name: omero web | check nginx timestamp
      stat:
        path: /etc/nginx/conf.d/omero-web.conf
      register: omero_web_nginx_st

    - name: omero web | check if nginx upgrade needed
      set_fact:
        omero_web_nginx_update_needed: >
          {{ (not omero_web_nginx_st.stat.exists) or
            (omero_web_nginx_st.stat.ctime < omero_web_st.stat.ctime)
          }}

    - debug:
        msg: "Nginx configuration needed? {{ omero_web_nginx_update_needed }}"

    # This will generate a warning about running su, ignore it since we need
    # to run as root for the redirection
    - name: omero web | generate nginx config
      become: true
      shell: >
        su {{ omero_web_system_user }} -lc
        "{{ omero_web_omero_command }} web config nginx"
        > /etc/nginx/conf.d/omero-web.conf
      when: omero_web_nginx_update_needed
      notify: restart nginx

  when: not omero_web_python3

- block:

    - name: omero web | generate nginx config
      become: true
      become_user: "{{ omero_web_system_user }}"
      command: "{{ omero_web_omero_command }} web config nginx"
      register: _omero_web_config_nginx
      # This should be safe to always run since nothing is written
      # The subsequent copy task will handle changed/unchanged
      changed_when: false
      check_mode: false

    - name: omero web | write nginx config
      become: true
      copy:
        content: "{{ _omero_web_config_nginx.stdout }}"
        dest: /etc/nginx/conf.d/omero-web.conf
      notify: restart nginx

  when: omero_web_python3

- name: omero web | nginx remove system defaults
  become: true
  replace:
    backup: true
    dest: /etc/nginx/nginx.conf
    regexp: '80\s*default_server\s*;'
    replace: '80; # default_server;'
  notify: restart nginx

- name: omero web | enable nginx
  become: true
  service:
    enabled: true
    name: nginx
    state: started

# SELinux should be handled by openmicroscopy.omero-web-runtime
