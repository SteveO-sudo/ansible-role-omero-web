---
# install OMERO.web

- name: omero web | is web symlink present
  become: true
  stat:
    path: "{{ omero_web_basedir }}/{{ omero_web_symlink }}"
  register: omero_web_symlink_st

# This should be safe to always run including in check-mode
- name: omero web | get web version
  become: true
  become_user: "{{ omero_web_system_user }}"
  command: >
    {{ omero_web_basedir }}/venv/bin/python
    {{ omero_web_basedir }}/{{ omero_web_symlink }}/bin/omero
    version
  register: omero_web_version
  when: omero_web_symlink_st.stat.exists
  changed_when: false
  check_mode: false
  # Set a custom error message
  ignore_errors: true

- name: omero web | check omero version could be obtained
  assert:
    msg: >-
      OMERO.web found but unable to get version, you may have a corrupt
      installation
    that: >-
      not (omero_web_symlink_st.stat.exists and omero_web_version is undefined)

# Check whether an upgrade is available
- name: omero web | get latest downloads url
  uri:
    url: https://downloads.openmicroscopy.org/latest/omero
    method: HEAD
  register: _omero_web_downloads_latest
  check_mode: false

# omego supports --release "latest" but not "present"
# It's easiest to lookup a concrete version and use this for all omego
# operations instead
- name: omero web | get latest version
  set_fact:
    _omero_web_new_version: "{{
      (omero_web_release in ('latest', 'present')) | ternary(
         _omero_web_downloads_latest.url.strip('/').split('/')[-1],
         omero_web_release
      )
  }}"

- name: omero web | checkupgrade
  set_fact:
    # Experimentation shows "5.3.2 | version_compare('latest', '<')" is False
    # so this should work as expected
    _omero_web_update_needed: "{{
      omero_web_symlink_st.stat.exists and
      (omero_web_version.stdout | version_compare(
         _omero_web_new_version,
         omero_web_checkupgrade_comparator))
    }}"

- debug:
    msg: >-
      Upgrade needed: {{ omero_web_version.stdout }} -> {{ omero_web_release }}
  when: _omero_web_update_needed

- name: omero web | set upgrade flag
  set_fact:
    _omero_web_execute_upgrade: "{{
      omero_web_upgrade and
      _omero_web_update_needed and
      (omero_web_release != 'present')
    }}"

- name: omero web | stop omero web
  become: true
  service:
    name: omero-web
    state: stopped
  when: omero_web_systemd_setup and _omero_web_execute_upgrade
  # Might not be installed
  ignore_errors: true

- name: omero web | configuration script
  become: true
  template:
    dest: "{{ omero_web_basedir }}/config/omero-web-config-update.sh"
    force: true
    src: omero-web-config-update-sh.j2
    mode: 0555
  notify:
    - omero-web rewrite omero-web configuration
    - omero-web restart omero-web

- name: omero web | configuration 00-omero-web.omero
  become: true
  template:
    dest: "{{ omero_web_basedir }}/config/00-omero-web.omero"
    force: true
    src: 00-omero-web-omero.j2
  notify:
    - omero-web rewrite omero-web configuration
    - omero-web restart omero-web

- name: omero web | install omero web
  become: true
  become_user: "{{ omero_web_system_user }}"
  command: >
    {{ omero_web_omego }}
    download
    {{ omero_web_omego_options }}
    --sym {{ omero_web_symlink }}
    python
  args:
    chdir: "{{ omero_web_basedir }}"
  when: _omero_web_execute_upgrade or not omero_web_symlink_st.stat.exists
  notify:
    - omero-web rewrite omero-web configuration
    - omero-web restart omero-web

- name: omero web | setup virtualenv
  become: true
  pip:
    requirements: >-
      {{ omero_web_basedir }}/OMERO.web/share/web/requirements-py27.txt
    state: present
    virtualenv: "{{ omero_web_basedir }}/venv"
    virtualenv_site_packages: true
  notify:
    - omero-web rewrite omero-web configuration
    - omero-web restart omero-web

- name: omero web | selinux restorecon
  become: true
  command: >-
    /usr/sbin/restorecon -R -v
    {{ ansible_check_mode | ternary('-n', '') }}
    {{ omero_web_basedir }}/OMERO.web
  register: result
  check_mode: false
  changed_when: 'result.stdout != ""'
  when: selinux_enabled
